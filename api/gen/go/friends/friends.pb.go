// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: friends/friends.proto

package friends

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FriendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromUserId    string                 `protobuf:"bytes,1,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
	ToUserId      string                 `protobuf:"bytes,2,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"`
	AccessToken   string                 `protobuf:"bytes,3,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FriendRequest) Reset() {
	*x = FriendRequest{}
	mi := &file_friends_friends_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendRequest) ProtoMessage() {}

func (x *FriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_friends_friends_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendRequest.ProtoReflect.Descriptor instead.
func (*FriendRequest) Descriptor() ([]byte, []int) {
	return file_friends_friends_proto_rawDescGZIP(), []int{0}
}

func (x *FriendRequest) GetFromUserId() string {
	if x != nil {
		return x.FromUserId
	}
	return ""
}

func (x *FriendRequest) GetToUserId() string {
	if x != nil {
		return x.ToUserId
	}
	return ""
}

func (x *FriendRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type FriendAction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TargetId      string                 `protobuf:"bytes,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	AccessToken   string                 `protobuf:"bytes,3,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FriendAction) Reset() {
	*x = FriendAction{}
	mi := &file_friends_friends_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FriendAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendAction) ProtoMessage() {}

func (x *FriendAction) ProtoReflect() protoreflect.Message {
	mi := &file_friends_friends_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendAction.ProtoReflect.Descriptor instead.
func (*FriendAction) Descriptor() ([]byte, []int) {
	return file_friends_friends_proto_rawDescGZIP(), []int{1}
}

func (x *FriendAction) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FriendAction) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *FriendAction) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type Friend struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Handle        string                 `protobuf:"bytes,2,opt,name=handle,proto3" json:"handle,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"` // ACCEPTED, PENDING, BLOCKED
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Friend) Reset() {
	*x = Friend{}
	mi := &file_friends_friends_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Friend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Friend) ProtoMessage() {}

func (x *Friend) ProtoReflect() protoreflect.Message {
	mi := &file_friends_friends_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Friend.ProtoReflect.Descriptor instead.
func (*Friend) Descriptor() ([]byte, []int) {
	return file_friends_friends_proto_rawDescGZIP(), []int{2}
}

func (x *Friend) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Friend) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

func (x *Friend) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type FriendList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Friends       []*Friend              `protobuf:"bytes,1,rep,name=friends,proto3" json:"friends,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FriendList) Reset() {
	*x = FriendList{}
	mi := &file_friends_friends_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FriendList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendList) ProtoMessage() {}

func (x *FriendList) ProtoReflect() protoreflect.Message {
	mi := &file_friends_friends_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendList.ProtoReflect.Descriptor instead.
func (*FriendList) Descriptor() ([]byte, []int) {
	return file_friends_friends_proto_rawDescGZIP(), []int{3}
}

func (x *FriendList) GetFriends() []*Friend {
	if x != nil {
		return x.Friends
	}
	return nil
}

type UserID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserID) Reset() {
	*x = UserID{}
	mi := &file_friends_friends_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserID) ProtoMessage() {}

func (x *UserID) ProtoReflect() protoreflect.Message {
	mi := &file_friends_friends_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserID.ProtoReflect.Descriptor instead.
func (*UserID) Descriptor() ([]byte, []int) {
	return file_friends_friends_proto_rawDescGZIP(), []int{4}
}

func (x *UserID) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type FriendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FriendResponse) Reset() {
	*x = FriendResponse{}
	mi := &file_friends_friends_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendResponse) ProtoMessage() {}

func (x *FriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_friends_friends_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendResponse.ProtoReflect.Descriptor instead.
func (*FriendResponse) Descriptor() ([]byte, []int) {
	return file_friends_friends_proto_rawDescGZIP(), []int{5}
}

func (x *FriendResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_friends_friends_proto protoreflect.FileDescriptor

const file_friends_friends_proto_rawDesc = "" +
	"\n" +
	"\x15friends/friends.proto\x12\afriends\"r\n" +
	"\rFriendRequest\x12 \n" +
	"\ffrom_user_id\x18\x01 \x01(\tR\n" +
	"fromUserId\x12\x1c\n" +
	"\n" +
	"to_user_id\x18\x02 \x01(\tR\btoUserId\x12!\n" +
	"\faccess_token\x18\x03 \x01(\tR\vaccessToken\"g\n" +
	"\fFriendAction\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1b\n" +
	"\ttarget_id\x18\x02 \x01(\tR\btargetId\x12!\n" +
	"\faccess_token\x18\x03 \x01(\tR\vaccessToken\"H\n" +
	"\x06Friend\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06handle\x18\x02 \x01(\tR\x06handle\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\"7\n" +
	"\n" +
	"FriendList\x12)\n" +
	"\afriends\x18\x01 \x03(\v2\x0f.friends.FriendR\afriends\"!\n" +
	"\x06UserID\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"*\n" +
	"\x0eFriendResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage2\x81\x03\n" +
	"\rFriendService\x12>\n" +
	"\vSendRequest\x12\x16.friends.FriendRequest\x1a\x17.friends.FriendResponse\x12?\n" +
	"\rAcceptRequest\x12\x15.friends.FriendAction\x1a\x17.friends.FriendResponse\x12=\n" +
	"\vDenyRequest\x12\x15.friends.FriendAction\x1a\x17.friends.FriendResponse\x12>\n" +
	"\fRemoveFriend\x12\x15.friends.FriendAction\x1a\x17.friends.FriendResponse\x123\n" +
	"\vListFriends\x12\x0f.friends.UserID\x1a\x13.friends.FriendList\x12;\n" +
	"\tBlockUser\x12\x15.friends.FriendAction\x1a\x17.friends.FriendResponseBCZAgithub.com/justcgh9/discord-clone-proto/api/proto/friends;friendsb\x06proto3"

var (
	file_friends_friends_proto_rawDescOnce sync.Once
	file_friends_friends_proto_rawDescData []byte
)

func file_friends_friends_proto_rawDescGZIP() []byte {
	file_friends_friends_proto_rawDescOnce.Do(func() {
		file_friends_friends_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_friends_friends_proto_rawDesc), len(file_friends_friends_proto_rawDesc)))
	})
	return file_friends_friends_proto_rawDescData
}

var file_friends_friends_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_friends_friends_proto_goTypes = []any{
	(*FriendRequest)(nil),  // 0: friends.FriendRequest
	(*FriendAction)(nil),   // 1: friends.FriendAction
	(*Friend)(nil),         // 2: friends.Friend
	(*FriendList)(nil),     // 3: friends.FriendList
	(*UserID)(nil),         // 4: friends.UserID
	(*FriendResponse)(nil), // 5: friends.FriendResponse
}
var file_friends_friends_proto_depIdxs = []int32{
	2, // 0: friends.FriendList.friends:type_name -> friends.Friend
	0, // 1: friends.FriendService.SendRequest:input_type -> friends.FriendRequest
	1, // 2: friends.FriendService.AcceptRequest:input_type -> friends.FriendAction
	1, // 3: friends.FriendService.DenyRequest:input_type -> friends.FriendAction
	1, // 4: friends.FriendService.RemoveFriend:input_type -> friends.FriendAction
	4, // 5: friends.FriendService.ListFriends:input_type -> friends.UserID
	1, // 6: friends.FriendService.BlockUser:input_type -> friends.FriendAction
	5, // 7: friends.FriendService.SendRequest:output_type -> friends.FriendResponse
	5, // 8: friends.FriendService.AcceptRequest:output_type -> friends.FriendResponse
	5, // 9: friends.FriendService.DenyRequest:output_type -> friends.FriendResponse
	5, // 10: friends.FriendService.RemoveFriend:output_type -> friends.FriendResponse
	3, // 11: friends.FriendService.ListFriends:output_type -> friends.FriendList
	5, // 12: friends.FriendService.BlockUser:output_type -> friends.FriendResponse
	7, // [7:13] is the sub-list for method output_type
	1, // [1:7] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_friends_friends_proto_init() }
func file_friends_friends_proto_init() {
	if File_friends_friends_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_friends_friends_proto_rawDesc), len(file_friends_friends_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_friends_friends_proto_goTypes,
		DependencyIndexes: file_friends_friends_proto_depIdxs,
		MessageInfos:      file_friends_friends_proto_msgTypes,
	}.Build()
	File_friends_friends_proto = out.File
	file_friends_friends_proto_goTypes = nil
	file_friends_friends_proto_depIdxs = nil
}
